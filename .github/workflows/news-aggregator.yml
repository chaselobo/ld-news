name: Daily News Aggregator

on:
  schedule:
    - cron: '*/5 * * * *'  # TEMP: run every 5 minutes for testing (UTC)
  workflow_dispatch:  # Allows manual triggering
  push:
    branches:
      - main  # change if your default branch is different
    paths:
      - '.github/workflows/news-aggregator.yml'  # push a change here to trigger once

jobs:
  run-aggregator:
    runs-on: ubuntu-latest
    environment: .env
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Debug secrets availability (length only)
      run: |
        echo "GOOGLE_CREDENTIALS length: ${#GOOGLE_CREDENTIALS}"
        echo "OPENAI_API_KEY length: ${#OPENAI_API_KEY}"
        echo "SLACK_BOT_TOKEN length: ${#SLACK_BOT_TOKEN}"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        
    - name: Create credentials file
      run: |
        echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 -d > credentials.json
        
    - name: Verify credentials file (debug)
      run: |
        echo "File exists: $(test -f credentials.json && echo 'YES' || echo 'NO')"
        echo "File size: $(wc -c < credentials.json) bytes"
        echo "First 100 characters:"
        head -c 100 credentials.json
        echo ""
        echo "Last 50 characters:"
        tail -c 50 credentials.json
        echo ""
        echo "Checking JSON validity:"
        python -c "import json; print('Valid JSON:', json.load(open('credentials.json'))['installed']['client_id'][:20] + '...')" || echo "Invalid JSON"
        
    - name: Create .env file
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "SLACK_BOT_TOKEN=${{ secrets.SLACK_BOT_TOKEN }}" >> .env
        echo "SLACK_CHANNEL=${{ secrets.SLACK_CHANNEL }}" >> .env
        echo "PHANTOMBUSTER_API_KEY=${{ secrets.PHANTOMBUSTER_API_KEY }}" >> .env
        echo "PB_TWITTER_SEARCH_ID=${{ secrets.PB_TWITTER_SEARCH_ID }}" >> .env
        echo "PB_LINKEDIN_POSTS_ID=${{ secrets.PB_LINKEDIN_POSTS_ID }}" >> .env
        echo "GMAIL_SENDER_EMAIL=${{ secrets.GMAIL_SENDER_EMAIL }}" >> .env
        echo "GMAIL_RECIPIENTS=${{ secrets.GMAIL_RECIPIENTS }}" >> .env
        echo "GMAIL_TOKEN_BASE64=${{ secrets.GMAIL_TOKEN_BASE64 }}" >> .env
        echo "PHANTOM_WINDOW_DAYS=3" >> .env
    - name: Run aggregator
      run: python main.py
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ldnews-logs-${{ github.run_id }}
        path: logs/
